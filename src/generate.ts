import fs from 'fs';
import { hd, config, helpers } from '@ckb-lumos/lumos';

const { mnemonic, ExtendedPrivateKey, AddressType } = hd;

config.initializeConfig(config.TESTNET);

function generateAccount() {
  const mne = mnemonic.generateMnemonic();
  const seed = mnemonic.mnemonicToSeedSync(mne);
  const secretKey = ExtendedPrivateKey.fromSeed(seed).privateKeyInfo(AddressType.Receiving, 0).privateKey;
  const publicKey = hd.key.privateToPublic(secretKey);
  const script = config.TESTNET.SCRIPTS.SECP256K1_BLAKE160;
  const lock = {
    args: hd.key.publicKeyToBlake160(publicKey),
    codeHash: script.CODE_HASH,
    hashType: script.HASH_TYPE,
  }
  const address = helpers.encodeToAddress(lock);
  return {
    mnemonic: mne,
    address,
    secretKey,
    publicKey,
  }
}

async function main() {
  const tom = generateAccount();
  const bob = generateAccount();
  const may = generateAccount();
  console.log('tom', tom);
  console.log('bob', bob);
  console.log('may', may);

  const accounts = `
// This file is generated by generate.ts
// These accounts are only for test.
// You should NEVER expose your mnemonic, secretKey/privateKey to anyone.
export type Account = {
  mnemonic: string;
  address: string;
  secretKey: string;
  publicKey: string;
}

export const tom = ${JSON.stringify(tom, null, 2)};

export const bob = ${JSON.stringify(bob, null, 2)};

export const may = ${JSON.stringify(may, null, 2)};
`;

  fs.writeFileSync('./accounts.ts', accounts);
  console.log('view generated accounts in accounts.ts');
}

main();